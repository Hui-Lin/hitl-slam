/* Auto-generated by genmsg_cpp for file /home/samer/code_release/hitl-slam/vector_slam_msgs/srv/LocalizationGuiCaptureSrv.srv */
#ifndef VECTOR_SLAM_MSGS_SERVICE_LOCALIZATIONGUICAPTURESRV_H
#define VECTOR_SLAM_MSGS_SERVICE_LOCALIZATIONGUICAPTURESRV_H
#include <string>
#include <vector>
#include <map>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/time.h"

#include "ros/macros.h"

#include "ros/assert.h"

#include "ros/service_traits.h"




namespace vector_slam_msgs
{
template <class ContainerAllocator>
struct LocalizationGuiCaptureSrvRequest_ {
  typedef LocalizationGuiCaptureSrvRequest_<ContainerAllocator> Type;

  LocalizationGuiCaptureSrvRequest_()
  : filename()
  {
  }

  LocalizationGuiCaptureSrvRequest_(const ContainerAllocator& _alloc)
  : filename(_alloc)
  {
  }

  typedef std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  _filename_type;
  std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  filename;


  typedef boost::shared_ptr< ::vector_slam_msgs::LocalizationGuiCaptureSrvRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::vector_slam_msgs::LocalizationGuiCaptureSrvRequest_<ContainerAllocator>  const> ConstPtr;
}; // struct LocalizationGuiCaptureSrvRequest
typedef  ::vector_slam_msgs::LocalizationGuiCaptureSrvRequest_<std::allocator<void> > LocalizationGuiCaptureSrvRequest;

typedef boost::shared_ptr< ::vector_slam_msgs::LocalizationGuiCaptureSrvRequest> LocalizationGuiCaptureSrvRequestPtr;
typedef boost::shared_ptr< ::vector_slam_msgs::LocalizationGuiCaptureSrvRequest const> LocalizationGuiCaptureSrvRequestConstPtr;



template <class ContainerAllocator>
struct LocalizationGuiCaptureSrvResponse_ {
  typedef LocalizationGuiCaptureSrvResponse_<ContainerAllocator> Type;

  LocalizationGuiCaptureSrvResponse_()
  : error(0)
  {
  }

  LocalizationGuiCaptureSrvResponse_(const ContainerAllocator& _alloc)
  : error(0)
  {
  }

  typedef int8_t _error_type;
  int8_t error;


  typedef boost::shared_ptr< ::vector_slam_msgs::LocalizationGuiCaptureSrvResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::vector_slam_msgs::LocalizationGuiCaptureSrvResponse_<ContainerAllocator>  const> ConstPtr;
}; // struct LocalizationGuiCaptureSrvResponse
typedef  ::vector_slam_msgs::LocalizationGuiCaptureSrvResponse_<std::allocator<void> > LocalizationGuiCaptureSrvResponse;

typedef boost::shared_ptr< ::vector_slam_msgs::LocalizationGuiCaptureSrvResponse> LocalizationGuiCaptureSrvResponsePtr;
typedef boost::shared_ptr< ::vector_slam_msgs::LocalizationGuiCaptureSrvResponse const> LocalizationGuiCaptureSrvResponseConstPtr;


struct LocalizationGuiCaptureSrv
{

typedef LocalizationGuiCaptureSrvRequest Request;
typedef LocalizationGuiCaptureSrvResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;
}; // struct LocalizationGuiCaptureSrv
} // namespace vector_slam_msgs

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::vector_slam_msgs::LocalizationGuiCaptureSrvRequest_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::vector_slam_msgs::LocalizationGuiCaptureSrvRequest_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::vector_slam_msgs::LocalizationGuiCaptureSrvRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "030824f52a0628ead956fb9d67e66ae9";
  }

  static const char* value(const  ::vector_slam_msgs::LocalizationGuiCaptureSrvRequest_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x030824f52a0628eaULL;
  static const uint64_t static_value2 = 0xd956fb9d67e66ae9ULL;
};

template<class ContainerAllocator>
struct DataType< ::vector_slam_msgs::LocalizationGuiCaptureSrvRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "vector_slam_msgs/LocalizationGuiCaptureSrvRequest";
  }

  static const char* value(const  ::vector_slam_msgs::LocalizationGuiCaptureSrvRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::vector_slam_msgs::LocalizationGuiCaptureSrvRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "string filename\n\
\n\
\n\
";
  }

  static const char* value(const  ::vector_slam_msgs::LocalizationGuiCaptureSrvRequest_<ContainerAllocator> &) { return value(); } 
};

} // namespace message_traits
} // namespace ros


namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::vector_slam_msgs::LocalizationGuiCaptureSrvResponse_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::vector_slam_msgs::LocalizationGuiCaptureSrvResponse_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::vector_slam_msgs::LocalizationGuiCaptureSrvResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "99e53bce000fb6e8448591149afae401";
  }

  static const char* value(const  ::vector_slam_msgs::LocalizationGuiCaptureSrvResponse_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x99e53bce000fb6e8ULL;
  static const uint64_t static_value2 = 0x448591149afae401ULL;
};

template<class ContainerAllocator>
struct DataType< ::vector_slam_msgs::LocalizationGuiCaptureSrvResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "vector_slam_msgs/LocalizationGuiCaptureSrvResponse";
  }

  static const char* value(const  ::vector_slam_msgs::LocalizationGuiCaptureSrvResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::vector_slam_msgs::LocalizationGuiCaptureSrvResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "\n\
int8 error\n\
\n\
\n\
";
  }

  static const char* value(const  ::vector_slam_msgs::LocalizationGuiCaptureSrvResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::vector_slam_msgs::LocalizationGuiCaptureSrvResponse_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::vector_slam_msgs::LocalizationGuiCaptureSrvRequest_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.filename);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct LocalizationGuiCaptureSrvRequest_
} // namespace serialization
} // namespace ros


namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::vector_slam_msgs::LocalizationGuiCaptureSrvResponse_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.error);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct LocalizationGuiCaptureSrvResponse_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace service_traits
{
template<>
struct MD5Sum<vector_slam_msgs::LocalizationGuiCaptureSrv> {
  static const char* value() 
  {
    return "c87d011601ff2433adb44eb46cc15573";
  }

  static const char* value(const vector_slam_msgs::LocalizationGuiCaptureSrv&) { return value(); } 
};

template<>
struct DataType<vector_slam_msgs::LocalizationGuiCaptureSrv> {
  static const char* value() 
  {
    return "vector_slam_msgs/LocalizationGuiCaptureSrv";
  }

  static const char* value(const vector_slam_msgs::LocalizationGuiCaptureSrv&) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<vector_slam_msgs::LocalizationGuiCaptureSrvRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "c87d011601ff2433adb44eb46cc15573";
  }

  static const char* value(const vector_slam_msgs::LocalizationGuiCaptureSrvRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<vector_slam_msgs::LocalizationGuiCaptureSrvRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "vector_slam_msgs/LocalizationGuiCaptureSrv";
  }

  static const char* value(const vector_slam_msgs::LocalizationGuiCaptureSrvRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<vector_slam_msgs::LocalizationGuiCaptureSrvResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "c87d011601ff2433adb44eb46cc15573";
  }

  static const char* value(const vector_slam_msgs::LocalizationGuiCaptureSrvResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<vector_slam_msgs::LocalizationGuiCaptureSrvResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "vector_slam_msgs/LocalizationGuiCaptureSrv";
  }

  static const char* value(const vector_slam_msgs::LocalizationGuiCaptureSrvResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace service_traits
} // namespace ros

#endif // VECTOR_SLAM_MSGS_SERVICE_LOCALIZATIONGUICAPTURESRV_H

